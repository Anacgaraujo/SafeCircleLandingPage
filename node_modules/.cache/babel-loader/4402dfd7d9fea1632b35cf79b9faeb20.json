{"ast":null,"code":"var _jsxFileName = \"/Users/anaaraujo/Documents/Safe Circle/website/landingpage/landingpage/src/components/imgBanner/imgBanner.js\",\n    _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from \"react\";\nimport { createApi } from \"unsplash-js\"; //import imageNotFound from \"../assets/image-not-found.png\";\n\nimport '../../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = createApi({\n  accessKey: \"wDIfFQEc2egSHKFzT2a19DpgSjJwokndRdKnTgfVHnI\"\n});\n\nconst PictureViewer = () => {\n  _s();\n\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const [isImageLoading, setIsImageLoading] = useState(false); // The function calls the API to get random picture from unsplash.\n\n  const getRandomPicture = useCallback(async () => {\n    setIsImageLoading(true);\n\n    try {\n      const result = await api.photos.getRandom({});\n\n      if (result.status === 200) {\n        setImageSrc(result.response.urls.regular);\n        setIsImageLoading(false);\n        console.log(result);\n      } //   } else {\n      //     setImageSrc(imageNotFound);\n      //     setIsImageLoading(false);\n      //   }\n\n    } catch (error) {\n      //setImageSrc(imageNotFound);\n      setIsImageLoading(false);\n      console.error(\"Error:\", error);\n    }\n  }, []); // Load a picture when component mounts.\n\n  useEffect(() => {\n    getRandomPicture();\n  }, [getRandomPicture]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"picture-viewer-cont\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: !isImageLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"picture\",\n        src: imageSrc.key,\n        alt: \"viewer\",\n        height: 500,\n        width: 500 //onError={() => setImageSrc(imageNotFound)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: !isImageLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"picture\",\n        src: imageSrc,\n        alt: \"viewer\",\n        height: 500,\n        width: 500 //onError={() => setImageSrc(imageNotFound)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: !isImageLoading ? /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"picture\",\n        src: imageSrc,\n        alt: \"viewer\",\n        height: 500,\n        width: 500 //onError={() => setImageSrc(imageNotFound)}\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PictureViewer, \"HRedy+KMzPRj6oSVPEamkcn3pGw=\");\n\n_c = PictureViewer;\nexport default PictureViewer; // import React, { useEffect, useState } from \"react\";\n// import '../../App.css';\n// import axios from 'axios';\n// import {Container, CardTitle, CardText, Row, Col} from \"reactstrap\";\n// import { createApi } from 'unsplash-js';\n// import nodeFetch from 'node-fetch';\n// import { Images } from \"./Images\";\n// const Banner = () => {\n//     const [images, setImages] = useState([]);\n//     const fetchAPI = async()=>{\n//         const response = await axios.get('https://api.unsplash.com/search/photos/?client_id=lWaadUjJBoVg_DtoJm9aWBgufk1TNKxWA_zaAjdHFvM&query=people');\n//         const data = await response.data;\n//         setImages(data);\n//     }\n//     return (\n//         <div>\n//             {/* <button className=\"btn btn-primary btn-md\"                \n//                 onLoad={fetchAPI}> Fetch API</button>\n//                 <div className='photos'>\n//                     {images.lenght>0&&(\n//                         <Images images={images}/>\n//                     )}\n//                 </div> */}\n//              <Container>\n//                 <Row>\n//                     <Col className=\"bg-light border\">\n//                     <div>\n//                     <img alt=\"\" id=\"unsplashImage\" />\n//                     </div>\n//                     </Col>\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     <div></div>\n//                     </Col>\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     </Col>\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     <div></div>\n//                     </Col>\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     </Col>\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     </Col>\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     <div></div>\n//                     </Col>\n//                 </Row>\n//             </Container> \n//         </div>\n//     );\n// };\n// export default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"PictureViewer\");","map":{"version":3,"sources":["/Users/anaaraujo/Documents/Safe Circle/website/landingpage/landingpage/src/components/imgBanner/imgBanner.js"],"names":["useCallback","useEffect","useState","createApi","api","accessKey","PictureViewer","imageSrc","setImageSrc","isImageLoading","setIsImageLoading","getRandomPicture","result","photos","getRandom","status","response","urls","regular","console","log","error","key"],"mappings":"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","sourcesContent":["\nimport { useCallback, useEffect, useState } from \"react\";\nimport { createApi } from \"unsplash-js\";\n\n\n//import imageNotFound from \"../assets/image-not-found.png\";\n\nimport '../../App.css';\n\n\nconst api = createApi({\n  accessKey: \"wDIfFQEc2egSHKFzT2a19DpgSjJwokndRdKnTgfVHnI\"\n});\n\nconst PictureViewer = () => {\n  const [imageSrc, setImageSrc] = useState(\"\");\n  const [isImageLoading, setIsImageLoading] = useState(false);\n\n  // The function calls the API to get random picture from unsplash.\n  const getRandomPicture = useCallback(async () => {\n    setIsImageLoading(true);\n    try {\n      const result = await api.photos.getRandom({});\n      if (result.status === 200) {\n        setImageSrc(result.response.urls.regular);\n        setIsImageLoading(false);\n        console.log(result)}\n    //   } else {\n    //     setImageSrc(imageNotFound);\n    //     setIsImageLoading(false);\n    //   }\n    } catch (error) {\n      //setImageSrc(imageNotFound);\n      setIsImageLoading(false);\n      console.error(\"Error:\", error);\n    }\n  }, []);\n\n  // Load a picture when component mounts.\n  useEffect(() => {\n    getRandomPicture();\n  }, [getRandomPicture]);\n\n  return (\n    <section className=\"picture-viewer-cont\">\n      <div className=\"image-container\">\n        {!isImageLoading ? (\n          <img\n            className=\"picture\"\n\n            src={imageSrc.key}\n            alt=\"viewer\"\n            height={500}\n            width={500}\n            //onError={() => setImageSrc(imageNotFound)}\n          ></img>\n        ) : (\n          <div className=\"loader\"></div>\n        )}\n      </div>\n\n      <div className=\"image-container\">\n        {!isImageLoading ? (\n          <img\n            className=\"picture\"\n            src={imageSrc}\n            alt=\"viewer\"\n            height={500}\n            width={500}\n            //onError={() => setImageSrc(imageNotFound)}\n          ></img>\n        ) : (\n          <div className=\"loader\"></div>\n        )}\n      </div>\n\n      <div className=\"image-container\">\n        {!isImageLoading ? (\n          <img\n            className=\"picture\"\n            src={imageSrc}\n            alt=\"viewer\"\n            height={500}\n            width={500}\n            //onError={() => setImageSrc(imageNotFound)}\n          ></img>\n        ) : (\n          <div className=\"loader\"></div>\n        )}\n      </div>\n      \n    </section>\n  );\n};\n\nexport default PictureViewer;\n\n\n// import React, { useEffect, useState } from \"react\";\n// import '../../App.css';\n// import axios from 'axios';\n// import {Container, CardTitle, CardText, Row, Col} from \"reactstrap\";\n// import { createApi } from 'unsplash-js';\n// import nodeFetch from 'node-fetch';\n// import { Images } from \"./Images\";\n\n\n// const Banner = () => {\n\n//     const [images, setImages] = useState([]);\n\n//     const fetchAPI = async()=>{\n//         const response = await axios.get('https://api.unsplash.com/search/photos/?client_id=lWaadUjJBoVg_DtoJm9aWBgufk1TNKxWA_zaAjdHFvM&query=people');\n//         const data = await response.data;\n//         setImages(data);\n//     }\n\n//     return (\n//         <div>\n//             {/* <button className=\"btn btn-primary btn-md\"                \n//                 onLoad={fetchAPI}> Fetch API</button>\n//                 <div className='photos'>\n//                     {images.lenght>0&&(\n//                         <Images images={images}/>\n//                     )}\n//                 </div> */}\n//              <Container>\n//                 <Row>\n//                     <Col className=\"bg-light border\">\n//                     <div>\n//                     <img alt=\"\" id=\"unsplashImage\" />\n                        \n//                     </div>\n//                     </Col>\n\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     <div></div>\n//                     </Col>\n\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     </Col>\n\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     <div></div>\n//                     </Col>\n\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     </Col>\n\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     </Col>\n\n//                     <Col className=\"bg-light border\">\n//                     <div></div>\n//                     <div></div>\n//                     </Col>\n//                 </Row>\n//             </Container> \n\n//         </div>\n//     );\n// };\n\n// export default Banner;"]},"metadata":{},"sourceType":"module"}